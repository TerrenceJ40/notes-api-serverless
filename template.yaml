AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Notes API â€“ full CRUD with IAM auth

Globals:
  Function:
    Runtime: python3.9
    Architectures: [x86_64]
    Timeout: 5
    Environment:
      Variables:
        NOTES_TABLE: !Ref NotesTable

Resources:
# ---------- DATA ----------
  NotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: noteId
          AttributeType: S
      KeySchema:
        - AttributeName: noteId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      TableName: NotesTable

# ---------- API ----------
  NotesApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: NotesApi
      StageName: Prod
      EndpointConfiguration: REGIONAL

# ---------- FUNCTIONS ----------
  CreateNoteFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: notes/
      Handler: create_note.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref NotesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref NotesApi
            Path: /notes
            Method: POST
            Auth:
              AuthorizationType: AWS_IAM

  GetNoteFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: notes/
      Handler: get_note.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref NotesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref NotesApi
            Path: /notes/{id}
            Method: GET
            Auth:
              AuthorizationType: AWS_IAM

  ListNotesFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: notes/
      Handler: list_notes.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBReadPolicy:
            TableName: !Ref NotesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref NotesApi
            Path: /notes
            Method: GET
            Auth:
              AuthorizationType: AWS_IAM

  UpdateNoteFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: notes/
      Handler: update_note.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref NotesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref NotesApi
            Path: /notes/{id}
            Method: PUT
            Auth:
              AuthorizationType: AWS_IAM

  DeleteNoteFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: notes/
      Handler: delete_note.lambda_handler
      Policies:
        - AWSLambdaBasicExecutionRole
        - DynamoDBCrudPolicy:
            TableName: !Ref NotesTable
      Events:
        Api:
          Type: Api
          Properties:
            RestApiId: !Ref NotesApi
            Path: /notes/{id}
            Method: DELETE
            Auth:
              AuthorizationType: AWS_IAM

Outputs:
  ApiUrl:
    Description: Invoke URL
    Value: !Sub "https://${NotesApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
